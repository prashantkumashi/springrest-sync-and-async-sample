package com.samples.pck.spring.rest.service;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import com.samples.pck.spring.rest.dao.UserauditRepository;
import com.samples.pck.spring.rest.entity.Useraudit;

@Service
public class UserauditService {

	@Autowired
	UserauditRepository userauditRepository;
	
	@Async @Transactional
	public void addUseraudit(Useraudit useraudit) throws IllegalAccessException {
		System.out.println("async method UserauditService.addUseraudit triggerred .........................");
		System.out.println("data received " + useraudit);
		if(useraudit.getAuditId() != null) 
			throw new IllegalAccessException("You cannot add a useraudit with the id, this field is autogenerated!");
		Useraudit committedrecord = userauditRepository.save(useraudit);
		System.out.println("record committed " + committedrecord);
	}
	
	@Transactional
	public Useraudit addUserauditInline(Useraudit useraudit) throws IllegalAccessException {
		System.out.println("async method UserauditService.addUseraudit triggerred .........................");
		System.out.println("data received " + useraudit);
		if(useraudit.getAuditId() != null) 
			throw new IllegalAccessException("You cannot add a useraudit with the id, this field is autogenerated!");
		Useraudit committedrecord = userauditRepository.save(useraudit);
		System.out.println("record committed " + committedrecord);
		return committedrecord;
	}
	public Useraudit getUserauditById(Long auditId) {		
		return userauditRepository.findById(auditId).get();
	}
	
	public List<Useraudit> getUserauditByUserId(Long userId){
		return userauditRepository.findByUserId(userId);
	}
	
}
